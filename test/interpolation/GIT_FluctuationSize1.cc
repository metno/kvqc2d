
#include "GapInterpolationTestBase.hh"

TEST_F(GapInterpolationTest, FluctuationSize1)
{
    DataList data(2650, 211, 330);
    data.add("2012-08-01 09:00:00",      17.0,      17.0, "0111000000100010", "")
        .add("2012-08-01 10:00:00",      17.8,      17.8, "0111000000100010", "")
        .add("2012-08-01 11:00:00",      18.4,      18.4, "0111000000100010", "")
        .add("2012-08-01 12:00:00",      18.5,      18.5, "0111000000100010", "")
        .add("2012-08-01 13:00:00",      18.7,      18.7, "0111000000100010", "")
        .add("2012-08-01 14:00:00",      18.2,      18.2, "0111000000100010", "")
        .add("2012-08-01 15:00:00",      17.7,      17.7, "0111000000100010", "");
    data.setParam(213);
    data.setStation(2650).setType(330)
        .add("2012-08-01 09:00:00",      15.0,      15.0, "0111000000000000", "")
        .add("2012-08-01 10:00:00",      16.7,      16.7, "0111000000000000", "")
        .add("2012-08-01 11:00:00",      17.3,      17.3, "0111000000000000", "")
        .add("2012-08-01 12:00:00",    -32767,    -32767, "0000003000000000", "") // obs: 17.8
        .add("2012-08-01 13:00:00",      17.7,      17.7, "0111000000000000", "")
        .add("2012-08-01 14:00:00",      17.6,      17.6, "0111000000000000", "")
        .add("2012-08-01 15:00:00",      17.7,      17.7, "0111000000000000", "");
    data.setParam(215);
    data.setStation(2650).setType(330)
        .add("2012-08-01 09:00:00",      17.0,      17.0, "0111000000000000", "")
        .add("2012-08-01 10:00:00",      18.1,      18.1, "0111000000000000", "")
        .add("2012-08-01 11:00:00",      19.1,      19.1, "0111000000000000", "")
        .add("2012-08-01 12:00:00",    -32767,    -32767, "0000003000000000", "") // obs: 19.6
        .add("2012-08-01 13:00:00",      19.9,      19.9, "0111000000000000", "")
        .add("2012-08-01 14:00:00",      19.4,      19.4, "0111000000000000", "")
        .add("2012-08-01 15:00:00",      18.9,      18.9, "0111000000000000", "");
    data.setParam(211);
    data.setStation(7950).setType(330);
    data.add("2012-08-01 09:00:00",      14.6,      14.6, "0111000000100010", "")
        .add("2012-08-01 10:00:00",      14.6,      14.6, "0111000000100010", "")
        .add("2012-08-01 11:00:00",      14.4,      14.4, "0111000000100010", "")
        .add("2012-08-01 12:00:00",      14.3,      14.3, "0111000000100010", "")
        .add("2012-08-01 13:00:00",      14.2,      14.2, "0111000000100010", "")
        .add("2012-08-01 14:00:00",      14.2,      14.2, "0111000000100010", "")
        .add("2012-08-01 15:00:00",      14.0,      14.0, "0111000000100010", "");
    data.setParam(213);
    data.setStation(7950).setType(330)
        .add("2012-08-01 09:00:00",      14.3,      14.3, "0111000000000000", "")
        .add("2012-08-01 10:00:00",      14.5,      14.5, "0111000000000000", "")
        .add("2012-08-01 11:00:00",      14.4,      14.4, "0111000000000000", "")
        .add("2012-08-01 12:00:00",    -32767,    -32767, "0000003000000000", "") // obs: 14.3
        .add("2012-08-01 13:00:00",      14.2,      14.2, "0111000000000000", "")
        .add("2012-08-01 14:00:00",      14.2,      14.2, "0111000000000000", "")
        .add("2012-08-01 15:00:00",      14.0,      14.0, "0111000000000000", "");
    data.setParam(215);
    data.setStation(7950).setType(330)
        .add("2012-08-01 09:00:00",      14.6,      14.6, "0111000000000000", "")
        .add("2012-08-01 10:00:00",      14.8,      14.8, "0111000000000000", "")
        .add("2012-08-01 11:00:00",      14.7,      14.7, "0111000000000000", "")
        .add("2012-08-01 12:00:00",    -32767,    -32767, "0000003000000000", "") // obs: 14.5
        .add("2012-08-01 13:00:00",      14.3,      14.3, "0111000000000000", "")
        .add("2012-08-01 14:00:00",      14.2,      14.2, "0111000000000000", "")
        .add("2012-08-01 15:00:00",      14.2,      14.2, "0111000000000000", "");
    ASSERT_NO_THROW(data.insert(db));

    std::ostringstream sql;
    sql << "INSERT INTO station VALUES(2650, 59.912, 11.580, 128.0, 0.0, 'AURSKOG II', 1484, 2650, NULL, NULL, NULL, 8, 't', '2007-11-28 00:00:00');"
        << "INSERT INTO station VALUES(7950, 61.186, 11.370, 260.0, 0.0, 'RENA FLYPLASS', NULL, 7950, NULL, NULL, NULL, 8, 't', '2020-01-01 00:00:00');";
    ASSERT_NO_THROW(db->exec(sql.str()));

    std::stringstream config;
    config << "Start_YYYY = 2012\n"
           << "Start_MM   =   08\n"
           << "Start_DD   =   01\n"
           << "Start_hh   =   09\n"
           << "End_YYYY   = 2012\n"
           << "End_MM     =   08\n"
           << "End_DD     =   01\n"
           << "End_hh     =   15\n"
           << "TypeId     =  330\n"
           << "Parameter  =  par=211,minPar=213,maxPar=215,offsetCorrectionLimit=15,fluctuationLevel=0.5\n";
    AlgorithmConfig params;
    params.Parse(config);

    ASSERT_CONFIGURE(algo, params);
    ASSERT_RUN(algo, bc, 8);
    EXPECT_NEAR(17.4, bc->update(0).corrected(), 0.35);
    EXPECT_NEAR(17.5, bc->update(1).corrected(), 0.35);
    EXPECT_NEAR(19.6, bc->update(2).corrected(), 0.35);
    EXPECT_NEAR(19.6, bc->update(3).corrected(), 0.35);
    EXPECT_NEAR(14.3, bc->update(4).corrected(), 0.15);
    EXPECT_NEAR(14.2, bc->update(5).corrected(), 0.15);
    EXPECT_NEAR(14.5, bc->update(6).corrected(), 0.15);
    EXPECT_NEAR(14.4, bc->update(7).corrected(), 0.15);

    ASSERT_RUN(algo, bc, 0);
}
