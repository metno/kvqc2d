
#include "GapInterpolationTestBase.hh"

#include "helpers/timeutil.h"

static float getDbCorrected(DBInterface* db, int stationid, int paramid, const kvtime::time& obstime)
{
    std::list<kvalobs::kvData> series
        = db->findDataOrderObstime(stationid, paramid, TimeRange(obstime, obstime));
    if( series.size() == 1 )
        return series.begin()->corrected();
    else
        return -12345;
}

TEST_F(GapInterpolationTest, MissingTASomeTAXN)
{
    DataList data(94500, 211, 330);
    data.add("2012-08-26 16:00:00",       9.2,       9.2, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       9.0,       9.0, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       8.6,       8.6, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       8.2,       8.2, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       8.1,       8.1, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       8.0,       8.0, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       8.0,       8.0, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       8.0,       8.0, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       8.0,       8.0, "0111100000100010", "");
    data.setStation(94680).setType(311)
        .add("2012-08-26 16:00:00",      13.7,      13.7, "0111100000100010", "")
        .add("2012-08-26 17:00:00",      15.8,      15.8, "0111100000100010", "")
        .add("2012-08-26 18:00:00",      13.9,      13.9, "0111100000100010", "")
        .add("2012-08-26 19:00:00",      14.6,      14.6, "0111100000100010", "")
        .add("2012-08-26 20:00:00",      12.1,      12.1, "0111100000100010", "")
        .add("2012-08-26 21:00:00",      10.6,      10.6, "0111100000100010", "")
        .add("2012-08-26 22:00:00",      10.2,      10.2, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       9.9,       9.9, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       9.4,       9.4, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       9.2,       9.2, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       9.2,       9.2, "0111100000100010", "");
    data.setStation(96310).setType(999)
        .add("2012-08-26 16:00:00",      15.6,      15.6, "0111100000100010", "")
        .add("2012-08-26 17:00:00",      15.6,      15.6, "0111100000100010", "")
        .add("2012-08-26 18:00:00",     -99.9,      14.2, "0700601000000000", "QC1-1-211,QC1-1-211x,QC1-4-211")
        .add("2012-08-26 19:00:00",     -99.8,      13.1, "0700601000000000", "QC1-1-211,QC1-1-211x,QC1-4-211")
        .add("2012-08-26 20:00:00",     -99.8,      12.4, "0700601000000000", "QC1-1-211,QC1-1-211x,QC1-4-211")
        .add("2012-08-26 21:00:00",     -99.8,      12.2, "0700601000000000", "QC1-1-211,QC1-1-211x,QC1-4-211")
        .add("2012-08-26 22:00:00",     -99.9,      12.0, "0700601000000000", "QC1-1-211,QC1-1-211x,QC1-4-211")
        .add("2012-08-26 23:00:00",     -99.9,      12.1, "0700601000000000", "QC1-1-211,QC1-1-211x,QC1-4-211")
        .add("2012-08-27 00:00:00",       4.0,       4.0, "0110500000100012", "QC1-4-211,hqc")
        .add("2012-08-27 01:00:00",       2.2,       2.2, "0111500000100012", "QC1-4-211,hqc")
        .add("2012-08-27 02:00:00",       2.2,       2.2, "0111100000100010", "");
    data.setStation(96400).setType(330)
        .add("2012-08-26 16:00:00",       9.2,       9.2, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       9.1,       9.1, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       8.9,       8.9, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       8.9,       8.9, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       8.8,       8.8, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       8.7,       8.7, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       8.7,       8.7, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       8.7,       8.7, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       8.6,       8.6, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       8.5,       8.5, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       8.5,       8.5, "0111100000100010", "");
    data.setStation(98090).setType(311)
        .add("2012-08-26 16:00:00",       9.6,       9.6, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       9.3,       9.3, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       9.1,       9.1, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       8.8,       8.8, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       8.9,       8.9, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       8.8,       8.8, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       9.2,       9.2, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       9.1,       9.1, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       9.8,       9.8, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       7.5,       7.5, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       7.5,       7.5, "0111100000100010", "");
    data.setStation(98360).setType(311)
        .add("2012-08-26 16:00:00",      12.3,      12.3, "0111100000100010", "")
        .add("2012-08-26 17:00:00",      10.4,      10.4, "0111100000100010", "")
        .add("2012-08-26 18:00:00",      10.3,      10.3, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       7.3,       7.3, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       6.0,       6.0, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       6.1,       6.1, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       6.0,       6.0, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       6.1,       6.1, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       5.6,       5.6, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       5.4,       5.4, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       5.4,       5.4, "0111100000100010", "");
    data.setStation(98400).setType(330)
        .add("2012-08-26 16:00:00",       8.9,       8.9, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       8.8,       8.8, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       8.6,       8.6, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       8.2,       8.2, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       7.8,       7.8, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       7.8,       7.8, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       8.0,       8.0, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       7.6,       7.6, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       7.6,       7.6, "0111100000100010", "");
    data.setStation(98550).setType(311)
        .add("2012-08-26 16:00:00",       9.2,       9.2, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       8.8,       8.8, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       8.6,       8.6, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       8.4,       8.4, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       8.0,       8.0, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       8.1,       8.1, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       8.1,       8.1, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       7.8,       7.8, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       7.8,       7.8, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       7.8,       7.8, "0111100000100010", "");
    data.setStation(98580).setType(311)
        .add("2012-08-26 16:00:00",       8.7,       8.7, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       8.4,       8.4, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       8.3,       8.3, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       8.1,       8.1, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       7.7,       7.7, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       7.7,       7.7, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       7.6,       7.6, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       7.5,       7.5, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       7.3,       7.3, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       7.3,       7.3, "0111100000100010", "");
    data.setStation(98790).setType(311)
        .add("2012-08-26 16:00:00",       9.9,       9.9, "0111100000100010", "")
        .add("2012-08-26 17:00:00",       8.4,       8.4, "0111100000100010", "")
        .add("2012-08-26 18:00:00",       7.9,       7.9, "0111100000100010", "")
        .add("2012-08-26 19:00:00",       7.6,       7.6, "0111100000100010", "")
        .add("2012-08-26 20:00:00",       7.5,       7.5, "0111100000100010", "")
        .add("2012-08-26 21:00:00",       7.5,       7.5, "0111100000100010", "")
        .add("2012-08-26 22:00:00",       7.4,       7.4, "0111100000100010", "")
        .add("2012-08-26 23:00:00",       7.1,       7.1, "0111100000100010", "")
        .add("2012-08-27 00:00:00",       6.8,       6.8, "0111100000100010", "")
        .add("2012-08-27 01:00:00",       6.8,       6.8, "0111100000100010", "")
        .add("2012-08-27 02:00:00",       6.8,       6.8, "0111100000100010", "");
    const float min_20120826_1900 = 14.7, max_20120826_1900 = 15.5;
    data.setStation(96310).setParam(213).setType(999)
        .add("2012-08-26 16:00:00",      15.6,      15.6, "0111000000000000", "")
        .add("2012-08-26 17:00:00",      15.6,      15.6, "0111000000000000", "")
        .add("2012-08-26 18:00:00",     -99.9,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-213x")
        .add("2012-08-26 19:00:00", min_20120826_1900, min_20120826_1900, "0110000000000000", "")
        .add("2012-08-26 20:00:00",     -99.8,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-213x")
        .add("2012-08-26 21:00:00",     -99.8,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-213x")
        .add("2012-08-26 22:00:00",     -99.9,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-213x")
        .add("2012-08-26 23:00:00",     -99.9,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-213x")
        .add("2012-08-27 00:00:00",     -99.8,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-213x")
        .add("2012-08-27 01:00:00",       2.2,       2.2, "0110000000000000", "")
        .add("2012-08-27 02:00:00",       2.2,       2.2, "0110000000000000", "");
    data.setParam(215)
        .add("2012-08-26 16:00:00",      16.8,      16.8, "0111000000000000", "")
        .add("2012-08-26 17:00:00",      15.9,      15.9, "0111000000000000", "")
        .add("2012-08-26 18:00:00",     -99.9,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-215x")
        .add("2012-08-26 19:00:00", max_20120826_1900, max_20120826_1900, "0110000000000000", "")
        .add("2012-08-26 20:00:00",      14.8,      14.8, "0101000000000000", "")
        .add("2012-08-26 21:00:00",     -99.8,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-215x")
        .add("2012-08-26 22:00:00",     -99.9,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-215x")
        .add("2012-08-26 23:00:00",     -99.9,  -32767.0, "0700003000000000", "QC1-1-213,QC1-1-215x")
        .add("2012-08-27 00:00:00",       4.0,       4.0, "0110000000000000", "")
        .add("2012-08-27 01:00:00",       4.1,       4.1, "0111000000000000", "")
        .add("2012-08-27 02:00:00",       4.1,       4.1, "0111000000000000", "");
    ASSERT_NO_THROW(data.insert(db));

    std::ostringstream sql;
    INSERT_STATION(sql, 94500, "FRUHOLMEN FYR",               71.094, 23.982,   13);
    INSERT_STATION(sql, 94680, "HONNINGSV�G LUFTHAVN",        71.010, 25.978,   14);
    INSERT_STATION(sql, 96310, "MEHAMN LUFTHAVN",             71.033, 27.830,   13);
    INSERT_STATION(sql, 96400, "SLETTNES FYR",                71.084, 28.218,    8);
    INSERT_STATION(sql, 98090, "BERLEV�G LUFTHAVN",           70.871, 29.035,   13);
    INSERT_STATION(sql, 98360, "B�TSFJORD - STRAUMSNESAKSLA", 70.603, 29.700,  152);
    INSERT_STATION(sql, 98400, "MAKKAUR FYR",                 70.701, 30.068,    9);
    INSERT_STATION(sql, 98550, "VARD� RADIO",                 70.371, 31.096,   14);
    INSERT_STATION(sql, 98580, "VARD� LUFTHAVN",              70.355, 31.044,   12);
    INSERT_STATION(sql, 98790, "VADS� LUFTHAVN",              70.065, 29.835,   39);

    INSERT_NEIGHBOR(sql, 96310, 211, 96400,  -0.578584,  1.15664, 1.43545);
    INSERT_NEIGHBOR(sql, 96310, 211, 98090,  0.0464031,  1.02488, 1.45592);
    INSERT_NEIGHBOR(sql, 96310, 211, 94680,  -0.794389,  1.11874, 1.59985);
    INSERT_NEIGHBOR(sql, 96310, 211, 98360,    1.61858, 0.899121, 1.69749);
    INSERT_NEIGHBOR(sql, 96310, 211, 98400, -0.0950584,  1.03234, 1.89993);
    INSERT_NEIGHBOR(sql, 96310, 211, 94500,   -2.14313,  1.25887, 2.13727);
    INSERT_NEIGHBOR(sql, 96310, 211, 98790,    1.25249, 0.893041, 2.13884);
    INSERT_NEIGHBOR(sql, 96310, 211, 98550,  -0.348791,  1.08202, 2.29211);
    INSERT_NEIGHBOR(sql, 96310, 211, 98580,   0.556376, 0.997761, 2.42521);
    ASSERT_NO_THROW_X(db->exec(sql.str()));

    std::stringstream config;
    config << "Start_YYYY = 2012\n"
           << "Start_MM   =   08\n"
           << "Start_DD   =   26\n"
           << "Start_hh   =   16\n"
           << "End_YYYY   = 2012\n"
           << "End_MM     =   08\n"
           << "End_DD     =   27\n"
           << "End_hh     =   02\n"
           << "TypeId     =  999\n"
           << "Parameter  =  par=211,minPar=213,maxPar=215,offsetCorrectionLimit=15,fluctuationLevel=0.5\n";
    AlgorithmConfig params;
    params.Parse(config);

    ASSERT_CONFIGURE(algo, params);

    const int N_TA = 6, N_TAN = 8, N_TAX = 7;
    ASSERT_RUN(algo, bc, N_TA+N_TAN+N_TAX);

    for(int i=N_TA; i<N_TA+N_TAN; ++i)
        ASSERT_EQ(213, bc->update(i).paramID()) << "TAN " << i << " has bad paramid";
    for(int i=N_TA+N_TAN; i<N_TA+N_TAN+N_TAX; ++i)
        ASSERT_EQ(215, bc->update(i).paramID()) << "TAX " << i << " has bad paramid";
    const int stationid = bc->update(0).stationID();
    const kvtime::time t0 = kvtime::maketime("2012-08-26 16:00:00");
    for(int i=0; i<11; ++i) {
        const kvtime::time t = Helpers::plusHour(t0, i);
        const float TA  = getDbCorrected(db, stationid, 211, t);
        const float TAN = getDbCorrected(db, stationid, 213, t);
        const float TAX = getDbCorrected(db, stationid, 215, t);
        ASSERT_LE(TAN, TAX) << "TAX < TAN for i=" << i << " t=" << t;
        ASSERT_LE(TAN, TA)  << "TA < TAN for i=" << i << " t=" << t;
        ASSERT_GE(TAX, TA)  << "TA > TAX for i=" << i << " t=" << t;
    }

    ASSERT_RUN(algo, bc, 0);
}
