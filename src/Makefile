# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/kvqc2
pkglibdir = $(libdir)/kvqc2
pkgincludedir = $(includedir)/kvqc2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = kvQc2$(EXEEXT)
TESTS = kvQc2Test$(EXEEXT)
check_PROGRAMS = kvQc2Test$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/model2kv.m4 $(top_srcdir)/m4/omniORB4.m4 \
	$(top_srcdir)/m4/postgresql.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kvQc2_OBJECTS = kvQc2-CheckedDataHelper.$(OBJEXT) \
	kvQc2-InitLogger.$(OBJEXT) kvQc2-ProcessControl.$(OBJEXT) \
	kvQc2-ProcessImpl.$(OBJEXT) kvQc2-Qc2App.$(OBJEXT) \
	kvQc2-Qc2Main.$(OBJEXT) kvQc2-Qc2Thread.$(OBJEXT) \
	kvQc2-ReadProgramOptions.$(OBJEXT) kvQc2-StopWatch.$(OBJEXT) \
	kvQc2-Distribute.$(OBJEXT) kvQc2-epsx.$(OBJEXT) \
	kvQc2-Process4D.$(OBJEXT) \
	kvQc2-ProcessRedistribution.$(OBJEXT) \
	kvQc2-ProcessUnitT.$(OBJEXT) kvQc2-Interpolate.$(OBJEXT) \
	kvQc2-ProcessSpaceCheck.$(OBJEXT) \
	kvQc2-ProcessVariability.$(OBJEXT) kvQc2-FlagTester.$(OBJEXT) \
	kvQc2-proj++.$(OBJEXT) kvQc2-Qc2D.$(OBJEXT) \
	kvQc2-StationSelection.$(OBJEXT) \
	kvQc2-table_delaunay.$(OBJEXT)
kvQc2_OBJECTS = $(am_kvQc2_OBJECTS)
kvQc2_DEPENDENCIES =
kvQc2_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(kvQc2_LDFLAGS) $(LDFLAGS) -o $@
am__objects_1 = kvQc2Test-CheckedDataHelper.$(OBJEXT) \
	kvQc2Test-InitLogger.$(OBJEXT) \
	kvQc2Test-ProcessControl.$(OBJEXT) \
	kvQc2Test-ProcessImpl.$(OBJEXT) kvQc2Test-Qc2App.$(OBJEXT) \
	kvQc2Test-Qc2Main.$(OBJEXT) kvQc2Test-Qc2Thread.$(OBJEXT) \
	kvQc2Test-ReadProgramOptions.$(OBJEXT) \
	kvQc2Test-StopWatch.$(OBJEXT) kvQc2Test-Distribute.$(OBJEXT) \
	kvQc2Test-epsx.$(OBJEXT) kvQc2Test-Process4D.$(OBJEXT) \
	kvQc2Test-ProcessRedistribution.$(OBJEXT) \
	kvQc2Test-ProcessUnitT.$(OBJEXT) \
	kvQc2Test-Interpolate.$(OBJEXT) \
	kvQc2Test-ProcessSpaceCheck.$(OBJEXT) \
	kvQc2Test-ProcessVariability.$(OBJEXT) \
	kvQc2Test-FlagTester.$(OBJEXT) kvQc2Test-proj++.$(OBJEXT) \
	kvQc2Test-Qc2D.$(OBJEXT) kvQc2Test-StationSelection.$(OBJEXT) \
	kvQc2Test-table_delaunay.$(OBJEXT)
am_kvQc2Test_OBJECTS = kvQc2Test-test.$(OBJEXT) \
	kvQc2Test-kvalobscachetest.$(OBJEXT) \
	kvQc2Test-checkrunnertest.$(OBJEXT) \
	kvQc2Test-kvalobsdatabase.$(OBJEXT) $(am__objects_1)
kvQc2Test_OBJECTS = $(am_kvQc2Test_OBJECTS)
am__DEPENDENCIES_1 =
kvQc2Test_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kvQc2_SOURCES) $(kvQc2Test_SOURCES)
DIST_SOURCES = $(kvQc2_SOURCES) $(kvQc2Test_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /metno/kvalobs/kvoss-package/kvQc2/trunk/missing --run aclocal-1.10
AMTAR = ${SHELL} /metno/kvalobs/kvoss-package/kvQc2/trunk/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /metno/kvalobs/kvoss-package/kvQc2/trunk/missing --run autoconf
AUTOHEADER = ${SHELL} /metno/kvalobs/kvoss-package/kvQc2/trunk/missing --run autoheader
AUTOMAKE = ${SHELL} /metno/kvalobs/kvoss-package/kvQc2/trunk/missing --run automake-1.10
AWK = gawk
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_REGEX_LIB = -lboost_regex
BOOST_THREAD_LIB = -lboost_thread
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
GREP = /bin/grep
IDL = PYTHONPATH=/usr/lib/python2.4/site-packages/ /usr/bin/omniidl
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /metno/kvalobs/kvoss-package/kvQc2/trunk/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = kvqc2
PACKAGE_BUGREPORT = kvoss@met.no
PACKAGE_NAME = kvQc2
PACKAGE_STRING = kvQc2 2.0.7
PACKAGE_TARNAME = kvqc2
PACKAGE_VERSION = 2.0.7
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.0.7
YACC = bison -y
YFLAGS = 
abs_builddir = /metno/kvalobs/kvoss-package/kvQc2/trunk/src
abs_srcdir = /metno/kvalobs/kvoss-package/kvQc2/trunk/src
abs_top_builddir = /metno/kvalobs/kvoss-package/kvQc2/trunk
abs_top_srcdir = /metno/kvalobs/kvoss-package/kvQc2/trunk
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
cppunit_CFLAGS =  
cppunit_LIBS = -lcppunit  
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /metno/kvalobs/kvoss-package/kvQc2/trunk/install-sh
kvcpp_CFLAGS = -D_REENTRANT -D__x86__ -D__linux__ -D__OSVERSION__=2 -I/metno/kvalobs/include -I/metno/kvalobs/include/kvalobs -I/metno/kvalobs/include/kvalobs/kvskel/  
kvcpp_LIBS = -Wl,-rpath /metno/kvalobs/lib/kvalobs -L/metno/kvalobs/lib -lkvcpp -lpuTools -lomniDynamic4 -lomniORB4 -lomnithread  
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libpose_CFLAGS = 
libpose_LIBS = 
libxml2_CFLAGS = -I/usr/include/libxml2  
libxml2_LIBS = -lxml2  
libxmlpp_CFLAGS = -I/usr/include/libxml++-2.6 -I/usr/lib/libxml++-2.6/include -I/usr/include/libxml2 -I/usr/include/glibmm-2.4 -I/usr/lib/glibmm-2.4/include -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
libxmlpp_LIBS = -lxml++-2.6 -lxml2 -lglibmm-2.4 -lgobject-2.0 -lsigc-2.0 -lglib-2.0  
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
omniDynamic4_CFLAGS = -D__x86__ -D__linux__ -D__OSVERSION__=2  
omniDynamic4_LIBS = -lomniDynamic4 -lomniORB4 -lomnithread  
omniORB4_CFLAGS = -D__x86__ -D__linux__ -D__OSVERSION__=2  
omniORB4_LIBS = -lomniORB4 -lomnithread  
pdfdir = ${docdir}
postgresql_CFLAGS = -I/usr/include/postgresql
postgresql_LIBS = -L/usr/lib -lpq
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
putools_CFLAGS = -I/metno/kvalobs/include  
putools_LIBS = -L/metno/kvalobs/lib -lpuTools  
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sqlite3_CFLAGS =  
sqlite3_LIBS = -lsqlite3  
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
kvQc2_SOURCES = \
	CheckedDataCommandBase.h \
	CheckedDataHelper.cc \
	CheckedDataHelper.h \
	InitLogger.cc \
	InitLogger.h \
	ProcessControl.cc \
	ProcessControl.h \
	ProcessImpl.cc \
	ProcessImpl.h \
	Qc2App.cc \
	Qc2App.h \
	Qc2Connection.h \
	Qc2Main.cc \
	Qc2Thread.cc \
	Qc2Thread.h \
	ReadProgramOptions.cc \
	ReadProgramOptions.h \
	StopWatch.cc \
	StopWatch.h \
	algorithms/BasicStatistics.h \
	algorithms/Distribute.cc \
	algorithms/Distribute.h \
	algorithms/epsx.cc \
	algorithms/epsx.h \
	algorithms/kvQABaseTypes.h \
	algorithms/Process4D.cc \
	algorithms/ProcessRedistribution.cc \
	algorithms/ProcessUnitT.cc \
	algorithms/Interpolate.cc \
	algorithms/ProcessSpaceCheck.cc \
	algorithms/ProcessVariability.cc \
	algorithms/FlagTester.cc \
	algorithms/proj++.cc \
	algorithms/proj++.h \
	algorithms/Qc2D.cc \
	algorithms/Qc2D.h \
	algorithms/scone.h \
	algorithms/StationSelection.cc \
	algorithms/StationSelection.h \
	algorithms/table_delaunay.cc \
	algorithms/table_delaunay.h \
	algorithms/tround.h 

AM_CPPFLAGS = \
        -DVERSION=\"$(VERSION)\" \
        $(kvcpp_CFLAGS) \
        $(BOOST_CPPFLAGS)

kvQc2_CPPFLAGS = \
	-I$(top_srcdir)/src/lib \
	-I$(top_builddir)/src/lib \
	-I$(top_builddir)/src/lib/kvskel \
	-I$(top_srcdir)/src/service-libs \
	$(BOOST_CPPFLAGS) \
	$(omniDynamic4_CFLAGS) \
	$(putools_CFLAGS) \
	$(perl_CFLAGS) \
        $(AM_CPPFLAGS)

kvQc2_LDFLAGS = -pthread -export-dynamic	
kvQc2_LDADD = \
	#$(top_builddir)/src/lib/milog/libmilog.la \
	#$(top_builddir)/src/lib/kvalobs/libkvalobs.la \
	#$(top_builddir)/src/lib/kvdb/libkvdb.la \
	#$(top_builddir)/src/lib/fileutil/libfileutil.la \
	#$(top_builddir)/src/lib/miutil/libmiutil.la \
	#$(top_builddir)/src/lib/miconfparser/libmiconfparser.a \
	#$(top_builddir)/src/lib/corbahelper/libcorbahelper.la \
	#$(top_builddir)/src/lib/kvskel/libkvadmininterface.la \
	#$(top_builddir)/src/lib/kvskel/libkvskel.la \
	#$(top_builddir)/src/lib/dnmithread/libdnmithread.la \
	/metno/kvalobs/kvalobs-svn/src/lib/milog/libmilog.la \
	/metno/kvalobs/kvalobs-svn/src/lib/kvalobs/libkvalobs.la \
	/metno/kvalobs/kvalobs-svn/src/lib/kvdb/libkvdb.la \
	/metno/kvalobs/kvalobs-svn/src/lib/fileutil/libfileutil.la \
	/metno/kvalobs/kvalobs-svn/src/lib/miutil/libmiutil.la \
	/metno/kvalobs/kvalobs-svn/src/lib/miconfparser/libmiconfparser.a \
	/metno/kvalobs/kvalobs-svn/src/lib/corbahelper/libcorbahelper.la \
	/metno/kvalobs/kvalobs-svn/src/lib/kvskel/libkvadmininterface.la \
	/metno/kvalobs/kvalobs-svn/src/lib/kvskel/libkvskel.la \
	/metno/kvalobs/kvalobs-svn/src/lib/dnmithread/libdnmithread.la \
        $(kvcpp_LIBS) \
	$(putools_LIBS) \
	$(BOOST_THREAD_LIB) \
	$(BOOST_REGEX_LIB) \
	$(BOOST_FILESYSTEM_LIB) \
	$(BOOST_PROGRAM_OPTIONS_LIB) \
	$(omniDynamic4_LIBS) \
	$(perl_LIBS) \
        -lproj \
        -lnetcdf \
        -lnetcdf_c++ \
        -lgsl \
        -lgslcblas

kvQc2Test_SOURCES = \
	test/test.cc \
	test/kvalobscachetest.h test/kvalobscachetest.cc \
	test/checkrunnertest.h test/checkrunnertest.cc \
	test/database/kvalobsdatabase.h test/database/kvalobsdatabase.cc \
	$(kvQc2_SOURCES:kvQc2.cc=)


#	-DSETUPDB_SQL=\"$(srcdir)/test/database/setupdb.sql\"
SETUP_DB = \"$(srcdir)/test/database/setupdb.sql\"
#SETUP_DB = \"$(top_srcdir)/src/kvalobs_database/kvalobs_schema.sql\"
kvQc2Test_CPPFLAGS = \
	-DDBDRIVER=\"$(top_builddir)/src/lib/dbdrivers/.libs/sqlite3driver.so\" \
	-DSETUPDB_SQL=$(SETUP_DB) \
	-DCHECKRUNNERTEST_INIT_SQL=\"$(srcdir)/test/etc/checkrunnertest.init.sql\" \
	$(kvQc2_CPPFLAGS) \
	$(cppunit_CFLAGS) \
	-DLOG_CHECK_SCRIPT 

kvQc2Test_LDADD = \
	$(kvQc2_LDADD) \
	$(cppunit_LIBS)

EXTRA_DIST = \
	test/database/setupdb.sql \
	test/etc/checkrunnertest.init.sql

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kvQc2$(EXEEXT): $(kvQc2_OBJECTS) $(kvQc2_DEPENDENCIES) 
	@rm -f kvQc2$(EXEEXT)
	$(kvQc2_LINK) $(kvQc2_OBJECTS) $(kvQc2_LDADD) $(LIBS)
kvQc2Test$(EXEEXT): $(kvQc2Test_OBJECTS) $(kvQc2Test_DEPENDENCIES) 
	@rm -f kvQc2Test$(EXEEXT)
	$(CXXLINK) $(kvQc2Test_OBJECTS) $(kvQc2Test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kvQc2-CheckedDataHelper.Po
include ./$(DEPDIR)/kvQc2-Distribute.Po
include ./$(DEPDIR)/kvQc2-FlagTester.Po
include ./$(DEPDIR)/kvQc2-InitLogger.Po
include ./$(DEPDIR)/kvQc2-Interpolate.Po
include ./$(DEPDIR)/kvQc2-Process4D.Po
include ./$(DEPDIR)/kvQc2-ProcessControl.Po
include ./$(DEPDIR)/kvQc2-ProcessImpl.Po
include ./$(DEPDIR)/kvQc2-ProcessRedistribution.Po
include ./$(DEPDIR)/kvQc2-ProcessSpaceCheck.Po
include ./$(DEPDIR)/kvQc2-ProcessUnitT.Po
include ./$(DEPDIR)/kvQc2-ProcessVariability.Po
include ./$(DEPDIR)/kvQc2-Qc2App.Po
include ./$(DEPDIR)/kvQc2-Qc2D.Po
include ./$(DEPDIR)/kvQc2-Qc2Main.Po
include ./$(DEPDIR)/kvQc2-Qc2Thread.Po
include ./$(DEPDIR)/kvQc2-ReadProgramOptions.Po
include ./$(DEPDIR)/kvQc2-StationSelection.Po
include ./$(DEPDIR)/kvQc2-StopWatch.Po
include ./$(DEPDIR)/kvQc2-epsx.Po
include ./$(DEPDIR)/kvQc2-proj++.Po
include ./$(DEPDIR)/kvQc2-table_delaunay.Po
include ./$(DEPDIR)/kvQc2Test-CheckedDataHelper.Po
include ./$(DEPDIR)/kvQc2Test-Distribute.Po
include ./$(DEPDIR)/kvQc2Test-FlagTester.Po
include ./$(DEPDIR)/kvQc2Test-InitLogger.Po
include ./$(DEPDIR)/kvQc2Test-Interpolate.Po
include ./$(DEPDIR)/kvQc2Test-Process4D.Po
include ./$(DEPDIR)/kvQc2Test-ProcessControl.Po
include ./$(DEPDIR)/kvQc2Test-ProcessImpl.Po
include ./$(DEPDIR)/kvQc2Test-ProcessRedistribution.Po
include ./$(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Po
include ./$(DEPDIR)/kvQc2Test-ProcessUnitT.Po
include ./$(DEPDIR)/kvQc2Test-ProcessVariability.Po
include ./$(DEPDIR)/kvQc2Test-Qc2App.Po
include ./$(DEPDIR)/kvQc2Test-Qc2D.Po
include ./$(DEPDIR)/kvQc2Test-Qc2Main.Po
include ./$(DEPDIR)/kvQc2Test-Qc2Thread.Po
include ./$(DEPDIR)/kvQc2Test-ReadProgramOptions.Po
include ./$(DEPDIR)/kvQc2Test-StationSelection.Po
include ./$(DEPDIR)/kvQc2Test-StopWatch.Po
include ./$(DEPDIR)/kvQc2Test-checkrunnertest.Po
include ./$(DEPDIR)/kvQc2Test-epsx.Po
include ./$(DEPDIR)/kvQc2Test-kvalobscachetest.Po
include ./$(DEPDIR)/kvQc2Test-kvalobsdatabase.Po
include ./$(DEPDIR)/kvQc2Test-proj++.Po
include ./$(DEPDIR)/kvQc2Test-table_delaunay.Po
include ./$(DEPDIR)/kvQc2Test-test.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

kvQc2-CheckedDataHelper.o: CheckedDataHelper.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-CheckedDataHelper.o -MD -MP -MF $(DEPDIR)/kvQc2-CheckedDataHelper.Tpo -c -o kvQc2-CheckedDataHelper.o `test -f 'CheckedDataHelper.cc' || echo '$(srcdir)/'`CheckedDataHelper.cc
	mv -f $(DEPDIR)/kvQc2-CheckedDataHelper.Tpo $(DEPDIR)/kvQc2-CheckedDataHelper.Po
#	source='CheckedDataHelper.cc' object='kvQc2-CheckedDataHelper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-CheckedDataHelper.o `test -f 'CheckedDataHelper.cc' || echo '$(srcdir)/'`CheckedDataHelper.cc

kvQc2-CheckedDataHelper.obj: CheckedDataHelper.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-CheckedDataHelper.obj -MD -MP -MF $(DEPDIR)/kvQc2-CheckedDataHelper.Tpo -c -o kvQc2-CheckedDataHelper.obj `if test -f 'CheckedDataHelper.cc'; then $(CYGPATH_W) 'CheckedDataHelper.cc'; else $(CYGPATH_W) '$(srcdir)/CheckedDataHelper.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-CheckedDataHelper.Tpo $(DEPDIR)/kvQc2-CheckedDataHelper.Po
#	source='CheckedDataHelper.cc' object='kvQc2-CheckedDataHelper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-CheckedDataHelper.obj `if test -f 'CheckedDataHelper.cc'; then $(CYGPATH_W) 'CheckedDataHelper.cc'; else $(CYGPATH_W) '$(srcdir)/CheckedDataHelper.cc'; fi`

kvQc2-InitLogger.o: InitLogger.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-InitLogger.o -MD -MP -MF $(DEPDIR)/kvQc2-InitLogger.Tpo -c -o kvQc2-InitLogger.o `test -f 'InitLogger.cc' || echo '$(srcdir)/'`InitLogger.cc
	mv -f $(DEPDIR)/kvQc2-InitLogger.Tpo $(DEPDIR)/kvQc2-InitLogger.Po
#	source='InitLogger.cc' object='kvQc2-InitLogger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-InitLogger.o `test -f 'InitLogger.cc' || echo '$(srcdir)/'`InitLogger.cc

kvQc2-InitLogger.obj: InitLogger.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-InitLogger.obj -MD -MP -MF $(DEPDIR)/kvQc2-InitLogger.Tpo -c -o kvQc2-InitLogger.obj `if test -f 'InitLogger.cc'; then $(CYGPATH_W) 'InitLogger.cc'; else $(CYGPATH_W) '$(srcdir)/InitLogger.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-InitLogger.Tpo $(DEPDIR)/kvQc2-InitLogger.Po
#	source='InitLogger.cc' object='kvQc2-InitLogger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-InitLogger.obj `if test -f 'InitLogger.cc'; then $(CYGPATH_W) 'InitLogger.cc'; else $(CYGPATH_W) '$(srcdir)/InitLogger.cc'; fi`

kvQc2-ProcessControl.o: ProcessControl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessControl.o -MD -MP -MF $(DEPDIR)/kvQc2-ProcessControl.Tpo -c -o kvQc2-ProcessControl.o `test -f 'ProcessControl.cc' || echo '$(srcdir)/'`ProcessControl.cc
	mv -f $(DEPDIR)/kvQc2-ProcessControl.Tpo $(DEPDIR)/kvQc2-ProcessControl.Po
#	source='ProcessControl.cc' object='kvQc2-ProcessControl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessControl.o `test -f 'ProcessControl.cc' || echo '$(srcdir)/'`ProcessControl.cc

kvQc2-ProcessControl.obj: ProcessControl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessControl.obj -MD -MP -MF $(DEPDIR)/kvQc2-ProcessControl.Tpo -c -o kvQc2-ProcessControl.obj `if test -f 'ProcessControl.cc'; then $(CYGPATH_W) 'ProcessControl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessControl.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ProcessControl.Tpo $(DEPDIR)/kvQc2-ProcessControl.Po
#	source='ProcessControl.cc' object='kvQc2-ProcessControl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessControl.obj `if test -f 'ProcessControl.cc'; then $(CYGPATH_W) 'ProcessControl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessControl.cc'; fi`

kvQc2-ProcessImpl.o: ProcessImpl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessImpl.o -MD -MP -MF $(DEPDIR)/kvQc2-ProcessImpl.Tpo -c -o kvQc2-ProcessImpl.o `test -f 'ProcessImpl.cc' || echo '$(srcdir)/'`ProcessImpl.cc
	mv -f $(DEPDIR)/kvQc2-ProcessImpl.Tpo $(DEPDIR)/kvQc2-ProcessImpl.Po
#	source='ProcessImpl.cc' object='kvQc2-ProcessImpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessImpl.o `test -f 'ProcessImpl.cc' || echo '$(srcdir)/'`ProcessImpl.cc

kvQc2-ProcessImpl.obj: ProcessImpl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessImpl.obj -MD -MP -MF $(DEPDIR)/kvQc2-ProcessImpl.Tpo -c -o kvQc2-ProcessImpl.obj `if test -f 'ProcessImpl.cc'; then $(CYGPATH_W) 'ProcessImpl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessImpl.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ProcessImpl.Tpo $(DEPDIR)/kvQc2-ProcessImpl.Po
#	source='ProcessImpl.cc' object='kvQc2-ProcessImpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessImpl.obj `if test -f 'ProcessImpl.cc'; then $(CYGPATH_W) 'ProcessImpl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessImpl.cc'; fi`

kvQc2-Qc2App.o: Qc2App.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2App.o -MD -MP -MF $(DEPDIR)/kvQc2-Qc2App.Tpo -c -o kvQc2-Qc2App.o `test -f 'Qc2App.cc' || echo '$(srcdir)/'`Qc2App.cc
	mv -f $(DEPDIR)/kvQc2-Qc2App.Tpo $(DEPDIR)/kvQc2-Qc2App.Po
#	source='Qc2App.cc' object='kvQc2-Qc2App.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2App.o `test -f 'Qc2App.cc' || echo '$(srcdir)/'`Qc2App.cc

kvQc2-Qc2App.obj: Qc2App.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2App.obj -MD -MP -MF $(DEPDIR)/kvQc2-Qc2App.Tpo -c -o kvQc2-Qc2App.obj `if test -f 'Qc2App.cc'; then $(CYGPATH_W) 'Qc2App.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2App.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Qc2App.Tpo $(DEPDIR)/kvQc2-Qc2App.Po
#	source='Qc2App.cc' object='kvQc2-Qc2App.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2App.obj `if test -f 'Qc2App.cc'; then $(CYGPATH_W) 'Qc2App.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2App.cc'; fi`

kvQc2-Qc2Main.o: Qc2Main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2Main.o -MD -MP -MF $(DEPDIR)/kvQc2-Qc2Main.Tpo -c -o kvQc2-Qc2Main.o `test -f 'Qc2Main.cc' || echo '$(srcdir)/'`Qc2Main.cc
	mv -f $(DEPDIR)/kvQc2-Qc2Main.Tpo $(DEPDIR)/kvQc2-Qc2Main.Po
#	source='Qc2Main.cc' object='kvQc2-Qc2Main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2Main.o `test -f 'Qc2Main.cc' || echo '$(srcdir)/'`Qc2Main.cc

kvQc2-Qc2Main.obj: Qc2Main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2Main.obj -MD -MP -MF $(DEPDIR)/kvQc2-Qc2Main.Tpo -c -o kvQc2-Qc2Main.obj `if test -f 'Qc2Main.cc'; then $(CYGPATH_W) 'Qc2Main.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Main.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Qc2Main.Tpo $(DEPDIR)/kvQc2-Qc2Main.Po
#	source='Qc2Main.cc' object='kvQc2-Qc2Main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2Main.obj `if test -f 'Qc2Main.cc'; then $(CYGPATH_W) 'Qc2Main.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Main.cc'; fi`

kvQc2-Qc2Thread.o: Qc2Thread.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2Thread.o -MD -MP -MF $(DEPDIR)/kvQc2-Qc2Thread.Tpo -c -o kvQc2-Qc2Thread.o `test -f 'Qc2Thread.cc' || echo '$(srcdir)/'`Qc2Thread.cc
	mv -f $(DEPDIR)/kvQc2-Qc2Thread.Tpo $(DEPDIR)/kvQc2-Qc2Thread.Po
#	source='Qc2Thread.cc' object='kvQc2-Qc2Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2Thread.o `test -f 'Qc2Thread.cc' || echo '$(srcdir)/'`Qc2Thread.cc

kvQc2-Qc2Thread.obj: Qc2Thread.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2Thread.obj -MD -MP -MF $(DEPDIR)/kvQc2-Qc2Thread.Tpo -c -o kvQc2-Qc2Thread.obj `if test -f 'Qc2Thread.cc'; then $(CYGPATH_W) 'Qc2Thread.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Thread.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Qc2Thread.Tpo $(DEPDIR)/kvQc2-Qc2Thread.Po
#	source='Qc2Thread.cc' object='kvQc2-Qc2Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2Thread.obj `if test -f 'Qc2Thread.cc'; then $(CYGPATH_W) 'Qc2Thread.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Thread.cc'; fi`

kvQc2-ReadProgramOptions.o: ReadProgramOptions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ReadProgramOptions.o -MD -MP -MF $(DEPDIR)/kvQc2-ReadProgramOptions.Tpo -c -o kvQc2-ReadProgramOptions.o `test -f 'ReadProgramOptions.cc' || echo '$(srcdir)/'`ReadProgramOptions.cc
	mv -f $(DEPDIR)/kvQc2-ReadProgramOptions.Tpo $(DEPDIR)/kvQc2-ReadProgramOptions.Po
#	source='ReadProgramOptions.cc' object='kvQc2-ReadProgramOptions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ReadProgramOptions.o `test -f 'ReadProgramOptions.cc' || echo '$(srcdir)/'`ReadProgramOptions.cc

kvQc2-ReadProgramOptions.obj: ReadProgramOptions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ReadProgramOptions.obj -MD -MP -MF $(DEPDIR)/kvQc2-ReadProgramOptions.Tpo -c -o kvQc2-ReadProgramOptions.obj `if test -f 'ReadProgramOptions.cc'; then $(CYGPATH_W) 'ReadProgramOptions.cc'; else $(CYGPATH_W) '$(srcdir)/ReadProgramOptions.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ReadProgramOptions.Tpo $(DEPDIR)/kvQc2-ReadProgramOptions.Po
#	source='ReadProgramOptions.cc' object='kvQc2-ReadProgramOptions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ReadProgramOptions.obj `if test -f 'ReadProgramOptions.cc'; then $(CYGPATH_W) 'ReadProgramOptions.cc'; else $(CYGPATH_W) '$(srcdir)/ReadProgramOptions.cc'; fi`

kvQc2-StopWatch.o: StopWatch.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-StopWatch.o -MD -MP -MF $(DEPDIR)/kvQc2-StopWatch.Tpo -c -o kvQc2-StopWatch.o `test -f 'StopWatch.cc' || echo '$(srcdir)/'`StopWatch.cc
	mv -f $(DEPDIR)/kvQc2-StopWatch.Tpo $(DEPDIR)/kvQc2-StopWatch.Po
#	source='StopWatch.cc' object='kvQc2-StopWatch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-StopWatch.o `test -f 'StopWatch.cc' || echo '$(srcdir)/'`StopWatch.cc

kvQc2-StopWatch.obj: StopWatch.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-StopWatch.obj -MD -MP -MF $(DEPDIR)/kvQc2-StopWatch.Tpo -c -o kvQc2-StopWatch.obj `if test -f 'StopWatch.cc'; then $(CYGPATH_W) 'StopWatch.cc'; else $(CYGPATH_W) '$(srcdir)/StopWatch.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-StopWatch.Tpo $(DEPDIR)/kvQc2-StopWatch.Po
#	source='StopWatch.cc' object='kvQc2-StopWatch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-StopWatch.obj `if test -f 'StopWatch.cc'; then $(CYGPATH_W) 'StopWatch.cc'; else $(CYGPATH_W) '$(srcdir)/StopWatch.cc'; fi`

kvQc2-Distribute.o: algorithms/Distribute.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Distribute.o -MD -MP -MF $(DEPDIR)/kvQc2-Distribute.Tpo -c -o kvQc2-Distribute.o `test -f 'algorithms/Distribute.cc' || echo '$(srcdir)/'`algorithms/Distribute.cc
	mv -f $(DEPDIR)/kvQc2-Distribute.Tpo $(DEPDIR)/kvQc2-Distribute.Po
#	source='algorithms/Distribute.cc' object='kvQc2-Distribute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Distribute.o `test -f 'algorithms/Distribute.cc' || echo '$(srcdir)/'`algorithms/Distribute.cc

kvQc2-Distribute.obj: algorithms/Distribute.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Distribute.obj -MD -MP -MF $(DEPDIR)/kvQc2-Distribute.Tpo -c -o kvQc2-Distribute.obj `if test -f 'algorithms/Distribute.cc'; then $(CYGPATH_W) 'algorithms/Distribute.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Distribute.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Distribute.Tpo $(DEPDIR)/kvQc2-Distribute.Po
#	source='algorithms/Distribute.cc' object='kvQc2-Distribute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Distribute.obj `if test -f 'algorithms/Distribute.cc'; then $(CYGPATH_W) 'algorithms/Distribute.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Distribute.cc'; fi`

kvQc2-epsx.o: algorithms/epsx.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-epsx.o -MD -MP -MF $(DEPDIR)/kvQc2-epsx.Tpo -c -o kvQc2-epsx.o `test -f 'algorithms/epsx.cc' || echo '$(srcdir)/'`algorithms/epsx.cc
	mv -f $(DEPDIR)/kvQc2-epsx.Tpo $(DEPDIR)/kvQc2-epsx.Po
#	source='algorithms/epsx.cc' object='kvQc2-epsx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-epsx.o `test -f 'algorithms/epsx.cc' || echo '$(srcdir)/'`algorithms/epsx.cc

kvQc2-epsx.obj: algorithms/epsx.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-epsx.obj -MD -MP -MF $(DEPDIR)/kvQc2-epsx.Tpo -c -o kvQc2-epsx.obj `if test -f 'algorithms/epsx.cc'; then $(CYGPATH_W) 'algorithms/epsx.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/epsx.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-epsx.Tpo $(DEPDIR)/kvQc2-epsx.Po
#	source='algorithms/epsx.cc' object='kvQc2-epsx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-epsx.obj `if test -f 'algorithms/epsx.cc'; then $(CYGPATH_W) 'algorithms/epsx.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/epsx.cc'; fi`

kvQc2-Process4D.o: algorithms/Process4D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Process4D.o -MD -MP -MF $(DEPDIR)/kvQc2-Process4D.Tpo -c -o kvQc2-Process4D.o `test -f 'algorithms/Process4D.cc' || echo '$(srcdir)/'`algorithms/Process4D.cc
	mv -f $(DEPDIR)/kvQc2-Process4D.Tpo $(DEPDIR)/kvQc2-Process4D.Po
#	source='algorithms/Process4D.cc' object='kvQc2-Process4D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Process4D.o `test -f 'algorithms/Process4D.cc' || echo '$(srcdir)/'`algorithms/Process4D.cc

kvQc2-Process4D.obj: algorithms/Process4D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Process4D.obj -MD -MP -MF $(DEPDIR)/kvQc2-Process4D.Tpo -c -o kvQc2-Process4D.obj `if test -f 'algorithms/Process4D.cc'; then $(CYGPATH_W) 'algorithms/Process4D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Process4D.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Process4D.Tpo $(DEPDIR)/kvQc2-Process4D.Po
#	source='algorithms/Process4D.cc' object='kvQc2-Process4D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Process4D.obj `if test -f 'algorithms/Process4D.cc'; then $(CYGPATH_W) 'algorithms/Process4D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Process4D.cc'; fi`

kvQc2-ProcessRedistribution.o: algorithms/ProcessRedistribution.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessRedistribution.o -MD -MP -MF $(DEPDIR)/kvQc2-ProcessRedistribution.Tpo -c -o kvQc2-ProcessRedistribution.o `test -f 'algorithms/ProcessRedistribution.cc' || echo '$(srcdir)/'`algorithms/ProcessRedistribution.cc
	mv -f $(DEPDIR)/kvQc2-ProcessRedistribution.Tpo $(DEPDIR)/kvQc2-ProcessRedistribution.Po
#	source='algorithms/ProcessRedistribution.cc' object='kvQc2-ProcessRedistribution.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessRedistribution.o `test -f 'algorithms/ProcessRedistribution.cc' || echo '$(srcdir)/'`algorithms/ProcessRedistribution.cc

kvQc2-ProcessRedistribution.obj: algorithms/ProcessRedistribution.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessRedistribution.obj -MD -MP -MF $(DEPDIR)/kvQc2-ProcessRedistribution.Tpo -c -o kvQc2-ProcessRedistribution.obj `if test -f 'algorithms/ProcessRedistribution.cc'; then $(CYGPATH_W) 'algorithms/ProcessRedistribution.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessRedistribution.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ProcessRedistribution.Tpo $(DEPDIR)/kvQc2-ProcessRedistribution.Po
#	source='algorithms/ProcessRedistribution.cc' object='kvQc2-ProcessRedistribution.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessRedistribution.obj `if test -f 'algorithms/ProcessRedistribution.cc'; then $(CYGPATH_W) 'algorithms/ProcessRedistribution.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessRedistribution.cc'; fi`

kvQc2-ProcessUnitT.o: algorithms/ProcessUnitT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessUnitT.o -MD -MP -MF $(DEPDIR)/kvQc2-ProcessUnitT.Tpo -c -o kvQc2-ProcessUnitT.o `test -f 'algorithms/ProcessUnitT.cc' || echo '$(srcdir)/'`algorithms/ProcessUnitT.cc
	mv -f $(DEPDIR)/kvQc2-ProcessUnitT.Tpo $(DEPDIR)/kvQc2-ProcessUnitT.Po
#	source='algorithms/ProcessUnitT.cc' object='kvQc2-ProcessUnitT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessUnitT.o `test -f 'algorithms/ProcessUnitT.cc' || echo '$(srcdir)/'`algorithms/ProcessUnitT.cc

kvQc2-ProcessUnitT.obj: algorithms/ProcessUnitT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessUnitT.obj -MD -MP -MF $(DEPDIR)/kvQc2-ProcessUnitT.Tpo -c -o kvQc2-ProcessUnitT.obj `if test -f 'algorithms/ProcessUnitT.cc'; then $(CYGPATH_W) 'algorithms/ProcessUnitT.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessUnitT.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ProcessUnitT.Tpo $(DEPDIR)/kvQc2-ProcessUnitT.Po
#	source='algorithms/ProcessUnitT.cc' object='kvQc2-ProcessUnitT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessUnitT.obj `if test -f 'algorithms/ProcessUnitT.cc'; then $(CYGPATH_W) 'algorithms/ProcessUnitT.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessUnitT.cc'; fi`

kvQc2-Interpolate.o: algorithms/Interpolate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Interpolate.o -MD -MP -MF $(DEPDIR)/kvQc2-Interpolate.Tpo -c -o kvQc2-Interpolate.o `test -f 'algorithms/Interpolate.cc' || echo '$(srcdir)/'`algorithms/Interpolate.cc
	mv -f $(DEPDIR)/kvQc2-Interpolate.Tpo $(DEPDIR)/kvQc2-Interpolate.Po
#	source='algorithms/Interpolate.cc' object='kvQc2-Interpolate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Interpolate.o `test -f 'algorithms/Interpolate.cc' || echo '$(srcdir)/'`algorithms/Interpolate.cc

kvQc2-Interpolate.obj: algorithms/Interpolate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Interpolate.obj -MD -MP -MF $(DEPDIR)/kvQc2-Interpolate.Tpo -c -o kvQc2-Interpolate.obj `if test -f 'algorithms/Interpolate.cc'; then $(CYGPATH_W) 'algorithms/Interpolate.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Interpolate.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Interpolate.Tpo $(DEPDIR)/kvQc2-Interpolate.Po
#	source='algorithms/Interpolate.cc' object='kvQc2-Interpolate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Interpolate.obj `if test -f 'algorithms/Interpolate.cc'; then $(CYGPATH_W) 'algorithms/Interpolate.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Interpolate.cc'; fi`

kvQc2-ProcessSpaceCheck.o: algorithms/ProcessSpaceCheck.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessSpaceCheck.o -MD -MP -MF $(DEPDIR)/kvQc2-ProcessSpaceCheck.Tpo -c -o kvQc2-ProcessSpaceCheck.o `test -f 'algorithms/ProcessSpaceCheck.cc' || echo '$(srcdir)/'`algorithms/ProcessSpaceCheck.cc
	mv -f $(DEPDIR)/kvQc2-ProcessSpaceCheck.Tpo $(DEPDIR)/kvQc2-ProcessSpaceCheck.Po
#	source='algorithms/ProcessSpaceCheck.cc' object='kvQc2-ProcessSpaceCheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessSpaceCheck.o `test -f 'algorithms/ProcessSpaceCheck.cc' || echo '$(srcdir)/'`algorithms/ProcessSpaceCheck.cc

kvQc2-ProcessSpaceCheck.obj: algorithms/ProcessSpaceCheck.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessSpaceCheck.obj -MD -MP -MF $(DEPDIR)/kvQc2-ProcessSpaceCheck.Tpo -c -o kvQc2-ProcessSpaceCheck.obj `if test -f 'algorithms/ProcessSpaceCheck.cc'; then $(CYGPATH_W) 'algorithms/ProcessSpaceCheck.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessSpaceCheck.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ProcessSpaceCheck.Tpo $(DEPDIR)/kvQc2-ProcessSpaceCheck.Po
#	source='algorithms/ProcessSpaceCheck.cc' object='kvQc2-ProcessSpaceCheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessSpaceCheck.obj `if test -f 'algorithms/ProcessSpaceCheck.cc'; then $(CYGPATH_W) 'algorithms/ProcessSpaceCheck.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessSpaceCheck.cc'; fi`

kvQc2-ProcessVariability.o: algorithms/ProcessVariability.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessVariability.o -MD -MP -MF $(DEPDIR)/kvQc2-ProcessVariability.Tpo -c -o kvQc2-ProcessVariability.o `test -f 'algorithms/ProcessVariability.cc' || echo '$(srcdir)/'`algorithms/ProcessVariability.cc
	mv -f $(DEPDIR)/kvQc2-ProcessVariability.Tpo $(DEPDIR)/kvQc2-ProcessVariability.Po
#	source='algorithms/ProcessVariability.cc' object='kvQc2-ProcessVariability.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessVariability.o `test -f 'algorithms/ProcessVariability.cc' || echo '$(srcdir)/'`algorithms/ProcessVariability.cc

kvQc2-ProcessVariability.obj: algorithms/ProcessVariability.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-ProcessVariability.obj -MD -MP -MF $(DEPDIR)/kvQc2-ProcessVariability.Tpo -c -o kvQc2-ProcessVariability.obj `if test -f 'algorithms/ProcessVariability.cc'; then $(CYGPATH_W) 'algorithms/ProcessVariability.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessVariability.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-ProcessVariability.Tpo $(DEPDIR)/kvQc2-ProcessVariability.Po
#	source='algorithms/ProcessVariability.cc' object='kvQc2-ProcessVariability.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-ProcessVariability.obj `if test -f 'algorithms/ProcessVariability.cc'; then $(CYGPATH_W) 'algorithms/ProcessVariability.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessVariability.cc'; fi`

kvQc2-FlagTester.o: algorithms/FlagTester.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-FlagTester.o -MD -MP -MF $(DEPDIR)/kvQc2-FlagTester.Tpo -c -o kvQc2-FlagTester.o `test -f 'algorithms/FlagTester.cc' || echo '$(srcdir)/'`algorithms/FlagTester.cc
	mv -f $(DEPDIR)/kvQc2-FlagTester.Tpo $(DEPDIR)/kvQc2-FlagTester.Po
#	source='algorithms/FlagTester.cc' object='kvQc2-FlagTester.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-FlagTester.o `test -f 'algorithms/FlagTester.cc' || echo '$(srcdir)/'`algorithms/FlagTester.cc

kvQc2-FlagTester.obj: algorithms/FlagTester.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-FlagTester.obj -MD -MP -MF $(DEPDIR)/kvQc2-FlagTester.Tpo -c -o kvQc2-FlagTester.obj `if test -f 'algorithms/FlagTester.cc'; then $(CYGPATH_W) 'algorithms/FlagTester.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/FlagTester.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-FlagTester.Tpo $(DEPDIR)/kvQc2-FlagTester.Po
#	source='algorithms/FlagTester.cc' object='kvQc2-FlagTester.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-FlagTester.obj `if test -f 'algorithms/FlagTester.cc'; then $(CYGPATH_W) 'algorithms/FlagTester.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/FlagTester.cc'; fi`

kvQc2-proj++.o: algorithms/proj++.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-proj++.o -MD -MP -MF $(DEPDIR)/kvQc2-proj++.Tpo -c -o kvQc2-proj++.o `test -f 'algorithms/proj++.cc' || echo '$(srcdir)/'`algorithms/proj++.cc
	mv -f $(DEPDIR)/kvQc2-proj++.Tpo $(DEPDIR)/kvQc2-proj++.Po
#	source='algorithms/proj++.cc' object='kvQc2-proj++.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-proj++.o `test -f 'algorithms/proj++.cc' || echo '$(srcdir)/'`algorithms/proj++.cc

kvQc2-proj++.obj: algorithms/proj++.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-proj++.obj -MD -MP -MF $(DEPDIR)/kvQc2-proj++.Tpo -c -o kvQc2-proj++.obj `if test -f 'algorithms/proj++.cc'; then $(CYGPATH_W) 'algorithms/proj++.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/proj++.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-proj++.Tpo $(DEPDIR)/kvQc2-proj++.Po
#	source='algorithms/proj++.cc' object='kvQc2-proj++.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-proj++.obj `if test -f 'algorithms/proj++.cc'; then $(CYGPATH_W) 'algorithms/proj++.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/proj++.cc'; fi`

kvQc2-Qc2D.o: algorithms/Qc2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2D.o -MD -MP -MF $(DEPDIR)/kvQc2-Qc2D.Tpo -c -o kvQc2-Qc2D.o `test -f 'algorithms/Qc2D.cc' || echo '$(srcdir)/'`algorithms/Qc2D.cc
	mv -f $(DEPDIR)/kvQc2-Qc2D.Tpo $(DEPDIR)/kvQc2-Qc2D.Po
#	source='algorithms/Qc2D.cc' object='kvQc2-Qc2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2D.o `test -f 'algorithms/Qc2D.cc' || echo '$(srcdir)/'`algorithms/Qc2D.cc

kvQc2-Qc2D.obj: algorithms/Qc2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-Qc2D.obj -MD -MP -MF $(DEPDIR)/kvQc2-Qc2D.Tpo -c -o kvQc2-Qc2D.obj `if test -f 'algorithms/Qc2D.cc'; then $(CYGPATH_W) 'algorithms/Qc2D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Qc2D.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-Qc2D.Tpo $(DEPDIR)/kvQc2-Qc2D.Po
#	source='algorithms/Qc2D.cc' object='kvQc2-Qc2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-Qc2D.obj `if test -f 'algorithms/Qc2D.cc'; then $(CYGPATH_W) 'algorithms/Qc2D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Qc2D.cc'; fi`

kvQc2-StationSelection.o: algorithms/StationSelection.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-StationSelection.o -MD -MP -MF $(DEPDIR)/kvQc2-StationSelection.Tpo -c -o kvQc2-StationSelection.o `test -f 'algorithms/StationSelection.cc' || echo '$(srcdir)/'`algorithms/StationSelection.cc
	mv -f $(DEPDIR)/kvQc2-StationSelection.Tpo $(DEPDIR)/kvQc2-StationSelection.Po
#	source='algorithms/StationSelection.cc' object='kvQc2-StationSelection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-StationSelection.o `test -f 'algorithms/StationSelection.cc' || echo '$(srcdir)/'`algorithms/StationSelection.cc

kvQc2-StationSelection.obj: algorithms/StationSelection.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-StationSelection.obj -MD -MP -MF $(DEPDIR)/kvQc2-StationSelection.Tpo -c -o kvQc2-StationSelection.obj `if test -f 'algorithms/StationSelection.cc'; then $(CYGPATH_W) 'algorithms/StationSelection.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/StationSelection.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-StationSelection.Tpo $(DEPDIR)/kvQc2-StationSelection.Po
#	source='algorithms/StationSelection.cc' object='kvQc2-StationSelection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-StationSelection.obj `if test -f 'algorithms/StationSelection.cc'; then $(CYGPATH_W) 'algorithms/StationSelection.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/StationSelection.cc'; fi`

kvQc2-table_delaunay.o: algorithms/table_delaunay.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-table_delaunay.o -MD -MP -MF $(DEPDIR)/kvQc2-table_delaunay.Tpo -c -o kvQc2-table_delaunay.o `test -f 'algorithms/table_delaunay.cc' || echo '$(srcdir)/'`algorithms/table_delaunay.cc
	mv -f $(DEPDIR)/kvQc2-table_delaunay.Tpo $(DEPDIR)/kvQc2-table_delaunay.Po
#	source='algorithms/table_delaunay.cc' object='kvQc2-table_delaunay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-table_delaunay.o `test -f 'algorithms/table_delaunay.cc' || echo '$(srcdir)/'`algorithms/table_delaunay.cc

kvQc2-table_delaunay.obj: algorithms/table_delaunay.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2-table_delaunay.obj -MD -MP -MF $(DEPDIR)/kvQc2-table_delaunay.Tpo -c -o kvQc2-table_delaunay.obj `if test -f 'algorithms/table_delaunay.cc'; then $(CYGPATH_W) 'algorithms/table_delaunay.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/table_delaunay.cc'; fi`
	mv -f $(DEPDIR)/kvQc2-table_delaunay.Tpo $(DEPDIR)/kvQc2-table_delaunay.Po
#	source='algorithms/table_delaunay.cc' object='kvQc2-table_delaunay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2-table_delaunay.obj `if test -f 'algorithms/table_delaunay.cc'; then $(CYGPATH_W) 'algorithms/table_delaunay.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/table_delaunay.cc'; fi`

kvQc2Test-test.o: test/test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-test.o -MD -MP -MF $(DEPDIR)/kvQc2Test-test.Tpo -c -o kvQc2Test-test.o `test -f 'test/test.cc' || echo '$(srcdir)/'`test/test.cc
	mv -f $(DEPDIR)/kvQc2Test-test.Tpo $(DEPDIR)/kvQc2Test-test.Po
#	source='test/test.cc' object='kvQc2Test-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-test.o `test -f 'test/test.cc' || echo '$(srcdir)/'`test/test.cc

kvQc2Test-test.obj: test/test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-test.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-test.Tpo -c -o kvQc2Test-test.obj `if test -f 'test/test.cc'; then $(CYGPATH_W) 'test/test.cc'; else $(CYGPATH_W) '$(srcdir)/test/test.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-test.Tpo $(DEPDIR)/kvQc2Test-test.Po
#	source='test/test.cc' object='kvQc2Test-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-test.obj `if test -f 'test/test.cc'; then $(CYGPATH_W) 'test/test.cc'; else $(CYGPATH_W) '$(srcdir)/test/test.cc'; fi`

kvQc2Test-kvalobscachetest.o: test/kvalobscachetest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-kvalobscachetest.o -MD -MP -MF $(DEPDIR)/kvQc2Test-kvalobscachetest.Tpo -c -o kvQc2Test-kvalobscachetest.o `test -f 'test/kvalobscachetest.cc' || echo '$(srcdir)/'`test/kvalobscachetest.cc
	mv -f $(DEPDIR)/kvQc2Test-kvalobscachetest.Tpo $(DEPDIR)/kvQc2Test-kvalobscachetest.Po
#	source='test/kvalobscachetest.cc' object='kvQc2Test-kvalobscachetest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-kvalobscachetest.o `test -f 'test/kvalobscachetest.cc' || echo '$(srcdir)/'`test/kvalobscachetest.cc

kvQc2Test-kvalobscachetest.obj: test/kvalobscachetest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-kvalobscachetest.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-kvalobscachetest.Tpo -c -o kvQc2Test-kvalobscachetest.obj `if test -f 'test/kvalobscachetest.cc'; then $(CYGPATH_W) 'test/kvalobscachetest.cc'; else $(CYGPATH_W) '$(srcdir)/test/kvalobscachetest.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-kvalobscachetest.Tpo $(DEPDIR)/kvQc2Test-kvalobscachetest.Po
#	source='test/kvalobscachetest.cc' object='kvQc2Test-kvalobscachetest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-kvalobscachetest.obj `if test -f 'test/kvalobscachetest.cc'; then $(CYGPATH_W) 'test/kvalobscachetest.cc'; else $(CYGPATH_W) '$(srcdir)/test/kvalobscachetest.cc'; fi`

kvQc2Test-checkrunnertest.o: test/checkrunnertest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-checkrunnertest.o -MD -MP -MF $(DEPDIR)/kvQc2Test-checkrunnertest.Tpo -c -o kvQc2Test-checkrunnertest.o `test -f 'test/checkrunnertest.cc' || echo '$(srcdir)/'`test/checkrunnertest.cc
	mv -f $(DEPDIR)/kvQc2Test-checkrunnertest.Tpo $(DEPDIR)/kvQc2Test-checkrunnertest.Po
#	source='test/checkrunnertest.cc' object='kvQc2Test-checkrunnertest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-checkrunnertest.o `test -f 'test/checkrunnertest.cc' || echo '$(srcdir)/'`test/checkrunnertest.cc

kvQc2Test-checkrunnertest.obj: test/checkrunnertest.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-checkrunnertest.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-checkrunnertest.Tpo -c -o kvQc2Test-checkrunnertest.obj `if test -f 'test/checkrunnertest.cc'; then $(CYGPATH_W) 'test/checkrunnertest.cc'; else $(CYGPATH_W) '$(srcdir)/test/checkrunnertest.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-checkrunnertest.Tpo $(DEPDIR)/kvQc2Test-checkrunnertest.Po
#	source='test/checkrunnertest.cc' object='kvQc2Test-checkrunnertest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-checkrunnertest.obj `if test -f 'test/checkrunnertest.cc'; then $(CYGPATH_W) 'test/checkrunnertest.cc'; else $(CYGPATH_W) '$(srcdir)/test/checkrunnertest.cc'; fi`

kvQc2Test-kvalobsdatabase.o: test/database/kvalobsdatabase.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-kvalobsdatabase.o -MD -MP -MF $(DEPDIR)/kvQc2Test-kvalobsdatabase.Tpo -c -o kvQc2Test-kvalobsdatabase.o `test -f 'test/database/kvalobsdatabase.cc' || echo '$(srcdir)/'`test/database/kvalobsdatabase.cc
	mv -f $(DEPDIR)/kvQc2Test-kvalobsdatabase.Tpo $(DEPDIR)/kvQc2Test-kvalobsdatabase.Po
#	source='test/database/kvalobsdatabase.cc' object='kvQc2Test-kvalobsdatabase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-kvalobsdatabase.o `test -f 'test/database/kvalobsdatabase.cc' || echo '$(srcdir)/'`test/database/kvalobsdatabase.cc

kvQc2Test-kvalobsdatabase.obj: test/database/kvalobsdatabase.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-kvalobsdatabase.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-kvalobsdatabase.Tpo -c -o kvQc2Test-kvalobsdatabase.obj `if test -f 'test/database/kvalobsdatabase.cc'; then $(CYGPATH_W) 'test/database/kvalobsdatabase.cc'; else $(CYGPATH_W) '$(srcdir)/test/database/kvalobsdatabase.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-kvalobsdatabase.Tpo $(DEPDIR)/kvQc2Test-kvalobsdatabase.Po
#	source='test/database/kvalobsdatabase.cc' object='kvQc2Test-kvalobsdatabase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-kvalobsdatabase.obj `if test -f 'test/database/kvalobsdatabase.cc'; then $(CYGPATH_W) 'test/database/kvalobsdatabase.cc'; else $(CYGPATH_W) '$(srcdir)/test/database/kvalobsdatabase.cc'; fi`

kvQc2Test-CheckedDataHelper.o: CheckedDataHelper.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-CheckedDataHelper.o -MD -MP -MF $(DEPDIR)/kvQc2Test-CheckedDataHelper.Tpo -c -o kvQc2Test-CheckedDataHelper.o `test -f 'CheckedDataHelper.cc' || echo '$(srcdir)/'`CheckedDataHelper.cc
	mv -f $(DEPDIR)/kvQc2Test-CheckedDataHelper.Tpo $(DEPDIR)/kvQc2Test-CheckedDataHelper.Po
#	source='CheckedDataHelper.cc' object='kvQc2Test-CheckedDataHelper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-CheckedDataHelper.o `test -f 'CheckedDataHelper.cc' || echo '$(srcdir)/'`CheckedDataHelper.cc

kvQc2Test-CheckedDataHelper.obj: CheckedDataHelper.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-CheckedDataHelper.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-CheckedDataHelper.Tpo -c -o kvQc2Test-CheckedDataHelper.obj `if test -f 'CheckedDataHelper.cc'; then $(CYGPATH_W) 'CheckedDataHelper.cc'; else $(CYGPATH_W) '$(srcdir)/CheckedDataHelper.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-CheckedDataHelper.Tpo $(DEPDIR)/kvQc2Test-CheckedDataHelper.Po
#	source='CheckedDataHelper.cc' object='kvQc2Test-CheckedDataHelper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-CheckedDataHelper.obj `if test -f 'CheckedDataHelper.cc'; then $(CYGPATH_W) 'CheckedDataHelper.cc'; else $(CYGPATH_W) '$(srcdir)/CheckedDataHelper.cc'; fi`

kvQc2Test-InitLogger.o: InitLogger.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-InitLogger.o -MD -MP -MF $(DEPDIR)/kvQc2Test-InitLogger.Tpo -c -o kvQc2Test-InitLogger.o `test -f 'InitLogger.cc' || echo '$(srcdir)/'`InitLogger.cc
	mv -f $(DEPDIR)/kvQc2Test-InitLogger.Tpo $(DEPDIR)/kvQc2Test-InitLogger.Po
#	source='InitLogger.cc' object='kvQc2Test-InitLogger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-InitLogger.o `test -f 'InitLogger.cc' || echo '$(srcdir)/'`InitLogger.cc

kvQc2Test-InitLogger.obj: InitLogger.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-InitLogger.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-InitLogger.Tpo -c -o kvQc2Test-InitLogger.obj `if test -f 'InitLogger.cc'; then $(CYGPATH_W) 'InitLogger.cc'; else $(CYGPATH_W) '$(srcdir)/InitLogger.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-InitLogger.Tpo $(DEPDIR)/kvQc2Test-InitLogger.Po
#	source='InitLogger.cc' object='kvQc2Test-InitLogger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-InitLogger.obj `if test -f 'InitLogger.cc'; then $(CYGPATH_W) 'InitLogger.cc'; else $(CYGPATH_W) '$(srcdir)/InitLogger.cc'; fi`

kvQc2Test-ProcessControl.o: ProcessControl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessControl.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessControl.Tpo -c -o kvQc2Test-ProcessControl.o `test -f 'ProcessControl.cc' || echo '$(srcdir)/'`ProcessControl.cc
	mv -f $(DEPDIR)/kvQc2Test-ProcessControl.Tpo $(DEPDIR)/kvQc2Test-ProcessControl.Po
#	source='ProcessControl.cc' object='kvQc2Test-ProcessControl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessControl.o `test -f 'ProcessControl.cc' || echo '$(srcdir)/'`ProcessControl.cc

kvQc2Test-ProcessControl.obj: ProcessControl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessControl.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessControl.Tpo -c -o kvQc2Test-ProcessControl.obj `if test -f 'ProcessControl.cc'; then $(CYGPATH_W) 'ProcessControl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessControl.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ProcessControl.Tpo $(DEPDIR)/kvQc2Test-ProcessControl.Po
#	source='ProcessControl.cc' object='kvQc2Test-ProcessControl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessControl.obj `if test -f 'ProcessControl.cc'; then $(CYGPATH_W) 'ProcessControl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessControl.cc'; fi`

kvQc2Test-ProcessImpl.o: ProcessImpl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessImpl.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessImpl.Tpo -c -o kvQc2Test-ProcessImpl.o `test -f 'ProcessImpl.cc' || echo '$(srcdir)/'`ProcessImpl.cc
	mv -f $(DEPDIR)/kvQc2Test-ProcessImpl.Tpo $(DEPDIR)/kvQc2Test-ProcessImpl.Po
#	source='ProcessImpl.cc' object='kvQc2Test-ProcessImpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessImpl.o `test -f 'ProcessImpl.cc' || echo '$(srcdir)/'`ProcessImpl.cc

kvQc2Test-ProcessImpl.obj: ProcessImpl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessImpl.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessImpl.Tpo -c -o kvQc2Test-ProcessImpl.obj `if test -f 'ProcessImpl.cc'; then $(CYGPATH_W) 'ProcessImpl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessImpl.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ProcessImpl.Tpo $(DEPDIR)/kvQc2Test-ProcessImpl.Po
#	source='ProcessImpl.cc' object='kvQc2Test-ProcessImpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessImpl.obj `if test -f 'ProcessImpl.cc'; then $(CYGPATH_W) 'ProcessImpl.cc'; else $(CYGPATH_W) '$(srcdir)/ProcessImpl.cc'; fi`

kvQc2Test-Qc2App.o: Qc2App.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2App.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2App.Tpo -c -o kvQc2Test-Qc2App.o `test -f 'Qc2App.cc' || echo '$(srcdir)/'`Qc2App.cc
	mv -f $(DEPDIR)/kvQc2Test-Qc2App.Tpo $(DEPDIR)/kvQc2Test-Qc2App.Po
#	source='Qc2App.cc' object='kvQc2Test-Qc2App.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2App.o `test -f 'Qc2App.cc' || echo '$(srcdir)/'`Qc2App.cc

kvQc2Test-Qc2App.obj: Qc2App.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2App.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2App.Tpo -c -o kvQc2Test-Qc2App.obj `if test -f 'Qc2App.cc'; then $(CYGPATH_W) 'Qc2App.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2App.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Qc2App.Tpo $(DEPDIR)/kvQc2Test-Qc2App.Po
#	source='Qc2App.cc' object='kvQc2Test-Qc2App.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2App.obj `if test -f 'Qc2App.cc'; then $(CYGPATH_W) 'Qc2App.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2App.cc'; fi`

kvQc2Test-Qc2Main.o: Qc2Main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2Main.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2Main.Tpo -c -o kvQc2Test-Qc2Main.o `test -f 'Qc2Main.cc' || echo '$(srcdir)/'`Qc2Main.cc
	mv -f $(DEPDIR)/kvQc2Test-Qc2Main.Tpo $(DEPDIR)/kvQc2Test-Qc2Main.Po
#	source='Qc2Main.cc' object='kvQc2Test-Qc2Main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2Main.o `test -f 'Qc2Main.cc' || echo '$(srcdir)/'`Qc2Main.cc

kvQc2Test-Qc2Main.obj: Qc2Main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2Main.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2Main.Tpo -c -o kvQc2Test-Qc2Main.obj `if test -f 'Qc2Main.cc'; then $(CYGPATH_W) 'Qc2Main.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Main.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Qc2Main.Tpo $(DEPDIR)/kvQc2Test-Qc2Main.Po
#	source='Qc2Main.cc' object='kvQc2Test-Qc2Main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2Main.obj `if test -f 'Qc2Main.cc'; then $(CYGPATH_W) 'Qc2Main.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Main.cc'; fi`

kvQc2Test-Qc2Thread.o: Qc2Thread.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2Thread.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2Thread.Tpo -c -o kvQc2Test-Qc2Thread.o `test -f 'Qc2Thread.cc' || echo '$(srcdir)/'`Qc2Thread.cc
	mv -f $(DEPDIR)/kvQc2Test-Qc2Thread.Tpo $(DEPDIR)/kvQc2Test-Qc2Thread.Po
#	source='Qc2Thread.cc' object='kvQc2Test-Qc2Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2Thread.o `test -f 'Qc2Thread.cc' || echo '$(srcdir)/'`Qc2Thread.cc

kvQc2Test-Qc2Thread.obj: Qc2Thread.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2Thread.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2Thread.Tpo -c -o kvQc2Test-Qc2Thread.obj `if test -f 'Qc2Thread.cc'; then $(CYGPATH_W) 'Qc2Thread.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Thread.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Qc2Thread.Tpo $(DEPDIR)/kvQc2Test-Qc2Thread.Po
#	source='Qc2Thread.cc' object='kvQc2Test-Qc2Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2Thread.obj `if test -f 'Qc2Thread.cc'; then $(CYGPATH_W) 'Qc2Thread.cc'; else $(CYGPATH_W) '$(srcdir)/Qc2Thread.cc'; fi`

kvQc2Test-ReadProgramOptions.o: ReadProgramOptions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ReadProgramOptions.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ReadProgramOptions.Tpo -c -o kvQc2Test-ReadProgramOptions.o `test -f 'ReadProgramOptions.cc' || echo '$(srcdir)/'`ReadProgramOptions.cc
	mv -f $(DEPDIR)/kvQc2Test-ReadProgramOptions.Tpo $(DEPDIR)/kvQc2Test-ReadProgramOptions.Po
#	source='ReadProgramOptions.cc' object='kvQc2Test-ReadProgramOptions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ReadProgramOptions.o `test -f 'ReadProgramOptions.cc' || echo '$(srcdir)/'`ReadProgramOptions.cc

kvQc2Test-ReadProgramOptions.obj: ReadProgramOptions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ReadProgramOptions.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ReadProgramOptions.Tpo -c -o kvQc2Test-ReadProgramOptions.obj `if test -f 'ReadProgramOptions.cc'; then $(CYGPATH_W) 'ReadProgramOptions.cc'; else $(CYGPATH_W) '$(srcdir)/ReadProgramOptions.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ReadProgramOptions.Tpo $(DEPDIR)/kvQc2Test-ReadProgramOptions.Po
#	source='ReadProgramOptions.cc' object='kvQc2Test-ReadProgramOptions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ReadProgramOptions.obj `if test -f 'ReadProgramOptions.cc'; then $(CYGPATH_W) 'ReadProgramOptions.cc'; else $(CYGPATH_W) '$(srcdir)/ReadProgramOptions.cc'; fi`

kvQc2Test-StopWatch.o: StopWatch.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-StopWatch.o -MD -MP -MF $(DEPDIR)/kvQc2Test-StopWatch.Tpo -c -o kvQc2Test-StopWatch.o `test -f 'StopWatch.cc' || echo '$(srcdir)/'`StopWatch.cc
	mv -f $(DEPDIR)/kvQc2Test-StopWatch.Tpo $(DEPDIR)/kvQc2Test-StopWatch.Po
#	source='StopWatch.cc' object='kvQc2Test-StopWatch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-StopWatch.o `test -f 'StopWatch.cc' || echo '$(srcdir)/'`StopWatch.cc

kvQc2Test-StopWatch.obj: StopWatch.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-StopWatch.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-StopWatch.Tpo -c -o kvQc2Test-StopWatch.obj `if test -f 'StopWatch.cc'; then $(CYGPATH_W) 'StopWatch.cc'; else $(CYGPATH_W) '$(srcdir)/StopWatch.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-StopWatch.Tpo $(DEPDIR)/kvQc2Test-StopWatch.Po
#	source='StopWatch.cc' object='kvQc2Test-StopWatch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-StopWatch.obj `if test -f 'StopWatch.cc'; then $(CYGPATH_W) 'StopWatch.cc'; else $(CYGPATH_W) '$(srcdir)/StopWatch.cc'; fi`

kvQc2Test-Distribute.o: algorithms/Distribute.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Distribute.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Distribute.Tpo -c -o kvQc2Test-Distribute.o `test -f 'algorithms/Distribute.cc' || echo '$(srcdir)/'`algorithms/Distribute.cc
	mv -f $(DEPDIR)/kvQc2Test-Distribute.Tpo $(DEPDIR)/kvQc2Test-Distribute.Po
#	source='algorithms/Distribute.cc' object='kvQc2Test-Distribute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Distribute.o `test -f 'algorithms/Distribute.cc' || echo '$(srcdir)/'`algorithms/Distribute.cc

kvQc2Test-Distribute.obj: algorithms/Distribute.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Distribute.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Distribute.Tpo -c -o kvQc2Test-Distribute.obj `if test -f 'algorithms/Distribute.cc'; then $(CYGPATH_W) 'algorithms/Distribute.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Distribute.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Distribute.Tpo $(DEPDIR)/kvQc2Test-Distribute.Po
#	source='algorithms/Distribute.cc' object='kvQc2Test-Distribute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Distribute.obj `if test -f 'algorithms/Distribute.cc'; then $(CYGPATH_W) 'algorithms/Distribute.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Distribute.cc'; fi`

kvQc2Test-epsx.o: algorithms/epsx.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-epsx.o -MD -MP -MF $(DEPDIR)/kvQc2Test-epsx.Tpo -c -o kvQc2Test-epsx.o `test -f 'algorithms/epsx.cc' || echo '$(srcdir)/'`algorithms/epsx.cc
	mv -f $(DEPDIR)/kvQc2Test-epsx.Tpo $(DEPDIR)/kvQc2Test-epsx.Po
#	source='algorithms/epsx.cc' object='kvQc2Test-epsx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-epsx.o `test -f 'algorithms/epsx.cc' || echo '$(srcdir)/'`algorithms/epsx.cc

kvQc2Test-epsx.obj: algorithms/epsx.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-epsx.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-epsx.Tpo -c -o kvQc2Test-epsx.obj `if test -f 'algorithms/epsx.cc'; then $(CYGPATH_W) 'algorithms/epsx.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/epsx.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-epsx.Tpo $(DEPDIR)/kvQc2Test-epsx.Po
#	source='algorithms/epsx.cc' object='kvQc2Test-epsx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-epsx.obj `if test -f 'algorithms/epsx.cc'; then $(CYGPATH_W) 'algorithms/epsx.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/epsx.cc'; fi`

kvQc2Test-Process4D.o: algorithms/Process4D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Process4D.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Process4D.Tpo -c -o kvQc2Test-Process4D.o `test -f 'algorithms/Process4D.cc' || echo '$(srcdir)/'`algorithms/Process4D.cc
	mv -f $(DEPDIR)/kvQc2Test-Process4D.Tpo $(DEPDIR)/kvQc2Test-Process4D.Po
#	source='algorithms/Process4D.cc' object='kvQc2Test-Process4D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Process4D.o `test -f 'algorithms/Process4D.cc' || echo '$(srcdir)/'`algorithms/Process4D.cc

kvQc2Test-Process4D.obj: algorithms/Process4D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Process4D.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Process4D.Tpo -c -o kvQc2Test-Process4D.obj `if test -f 'algorithms/Process4D.cc'; then $(CYGPATH_W) 'algorithms/Process4D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Process4D.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Process4D.Tpo $(DEPDIR)/kvQc2Test-Process4D.Po
#	source='algorithms/Process4D.cc' object='kvQc2Test-Process4D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Process4D.obj `if test -f 'algorithms/Process4D.cc'; then $(CYGPATH_W) 'algorithms/Process4D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Process4D.cc'; fi`

kvQc2Test-ProcessRedistribution.o: algorithms/ProcessRedistribution.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessRedistribution.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessRedistribution.Tpo -c -o kvQc2Test-ProcessRedistribution.o `test -f 'algorithms/ProcessRedistribution.cc' || echo '$(srcdir)/'`algorithms/ProcessRedistribution.cc
	mv -f $(DEPDIR)/kvQc2Test-ProcessRedistribution.Tpo $(DEPDIR)/kvQc2Test-ProcessRedistribution.Po
#	source='algorithms/ProcessRedistribution.cc' object='kvQc2Test-ProcessRedistribution.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessRedistribution.o `test -f 'algorithms/ProcessRedistribution.cc' || echo '$(srcdir)/'`algorithms/ProcessRedistribution.cc

kvQc2Test-ProcessRedistribution.obj: algorithms/ProcessRedistribution.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessRedistribution.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessRedistribution.Tpo -c -o kvQc2Test-ProcessRedistribution.obj `if test -f 'algorithms/ProcessRedistribution.cc'; then $(CYGPATH_W) 'algorithms/ProcessRedistribution.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessRedistribution.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ProcessRedistribution.Tpo $(DEPDIR)/kvQc2Test-ProcessRedistribution.Po
#	source='algorithms/ProcessRedistribution.cc' object='kvQc2Test-ProcessRedistribution.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessRedistribution.obj `if test -f 'algorithms/ProcessRedistribution.cc'; then $(CYGPATH_W) 'algorithms/ProcessRedistribution.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessRedistribution.cc'; fi`

kvQc2Test-ProcessUnitT.o: algorithms/ProcessUnitT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessUnitT.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessUnitT.Tpo -c -o kvQc2Test-ProcessUnitT.o `test -f 'algorithms/ProcessUnitT.cc' || echo '$(srcdir)/'`algorithms/ProcessUnitT.cc
	mv -f $(DEPDIR)/kvQc2Test-ProcessUnitT.Tpo $(DEPDIR)/kvQc2Test-ProcessUnitT.Po
#	source='algorithms/ProcessUnitT.cc' object='kvQc2Test-ProcessUnitT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessUnitT.o `test -f 'algorithms/ProcessUnitT.cc' || echo '$(srcdir)/'`algorithms/ProcessUnitT.cc

kvQc2Test-ProcessUnitT.obj: algorithms/ProcessUnitT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessUnitT.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessUnitT.Tpo -c -o kvQc2Test-ProcessUnitT.obj `if test -f 'algorithms/ProcessUnitT.cc'; then $(CYGPATH_W) 'algorithms/ProcessUnitT.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessUnitT.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ProcessUnitT.Tpo $(DEPDIR)/kvQc2Test-ProcessUnitT.Po
#	source='algorithms/ProcessUnitT.cc' object='kvQc2Test-ProcessUnitT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessUnitT.obj `if test -f 'algorithms/ProcessUnitT.cc'; then $(CYGPATH_W) 'algorithms/ProcessUnitT.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessUnitT.cc'; fi`

kvQc2Test-Interpolate.o: algorithms/Interpolate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Interpolate.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Interpolate.Tpo -c -o kvQc2Test-Interpolate.o `test -f 'algorithms/Interpolate.cc' || echo '$(srcdir)/'`algorithms/Interpolate.cc
	mv -f $(DEPDIR)/kvQc2Test-Interpolate.Tpo $(DEPDIR)/kvQc2Test-Interpolate.Po
#	source='algorithms/Interpolate.cc' object='kvQc2Test-Interpolate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Interpolate.o `test -f 'algorithms/Interpolate.cc' || echo '$(srcdir)/'`algorithms/Interpolate.cc

kvQc2Test-Interpolate.obj: algorithms/Interpolate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Interpolate.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Interpolate.Tpo -c -o kvQc2Test-Interpolate.obj `if test -f 'algorithms/Interpolate.cc'; then $(CYGPATH_W) 'algorithms/Interpolate.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Interpolate.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Interpolate.Tpo $(DEPDIR)/kvQc2Test-Interpolate.Po
#	source='algorithms/Interpolate.cc' object='kvQc2Test-Interpolate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Interpolate.obj `if test -f 'algorithms/Interpolate.cc'; then $(CYGPATH_W) 'algorithms/Interpolate.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Interpolate.cc'; fi`

kvQc2Test-ProcessSpaceCheck.o: algorithms/ProcessSpaceCheck.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessSpaceCheck.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Tpo -c -o kvQc2Test-ProcessSpaceCheck.o `test -f 'algorithms/ProcessSpaceCheck.cc' || echo '$(srcdir)/'`algorithms/ProcessSpaceCheck.cc
	mv -f $(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Tpo $(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Po
#	source='algorithms/ProcessSpaceCheck.cc' object='kvQc2Test-ProcessSpaceCheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessSpaceCheck.o `test -f 'algorithms/ProcessSpaceCheck.cc' || echo '$(srcdir)/'`algorithms/ProcessSpaceCheck.cc

kvQc2Test-ProcessSpaceCheck.obj: algorithms/ProcessSpaceCheck.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessSpaceCheck.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Tpo -c -o kvQc2Test-ProcessSpaceCheck.obj `if test -f 'algorithms/ProcessSpaceCheck.cc'; then $(CYGPATH_W) 'algorithms/ProcessSpaceCheck.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessSpaceCheck.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Tpo $(DEPDIR)/kvQc2Test-ProcessSpaceCheck.Po
#	source='algorithms/ProcessSpaceCheck.cc' object='kvQc2Test-ProcessSpaceCheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessSpaceCheck.obj `if test -f 'algorithms/ProcessSpaceCheck.cc'; then $(CYGPATH_W) 'algorithms/ProcessSpaceCheck.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessSpaceCheck.cc'; fi`

kvQc2Test-ProcessVariability.o: algorithms/ProcessVariability.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessVariability.o -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessVariability.Tpo -c -o kvQc2Test-ProcessVariability.o `test -f 'algorithms/ProcessVariability.cc' || echo '$(srcdir)/'`algorithms/ProcessVariability.cc
	mv -f $(DEPDIR)/kvQc2Test-ProcessVariability.Tpo $(DEPDIR)/kvQc2Test-ProcessVariability.Po
#	source='algorithms/ProcessVariability.cc' object='kvQc2Test-ProcessVariability.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessVariability.o `test -f 'algorithms/ProcessVariability.cc' || echo '$(srcdir)/'`algorithms/ProcessVariability.cc

kvQc2Test-ProcessVariability.obj: algorithms/ProcessVariability.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-ProcessVariability.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-ProcessVariability.Tpo -c -o kvQc2Test-ProcessVariability.obj `if test -f 'algorithms/ProcessVariability.cc'; then $(CYGPATH_W) 'algorithms/ProcessVariability.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessVariability.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-ProcessVariability.Tpo $(DEPDIR)/kvQc2Test-ProcessVariability.Po
#	source='algorithms/ProcessVariability.cc' object='kvQc2Test-ProcessVariability.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-ProcessVariability.obj `if test -f 'algorithms/ProcessVariability.cc'; then $(CYGPATH_W) 'algorithms/ProcessVariability.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/ProcessVariability.cc'; fi`

kvQc2Test-FlagTester.o: algorithms/FlagTester.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-FlagTester.o -MD -MP -MF $(DEPDIR)/kvQc2Test-FlagTester.Tpo -c -o kvQc2Test-FlagTester.o `test -f 'algorithms/FlagTester.cc' || echo '$(srcdir)/'`algorithms/FlagTester.cc
	mv -f $(DEPDIR)/kvQc2Test-FlagTester.Tpo $(DEPDIR)/kvQc2Test-FlagTester.Po
#	source='algorithms/FlagTester.cc' object='kvQc2Test-FlagTester.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-FlagTester.o `test -f 'algorithms/FlagTester.cc' || echo '$(srcdir)/'`algorithms/FlagTester.cc

kvQc2Test-FlagTester.obj: algorithms/FlagTester.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-FlagTester.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-FlagTester.Tpo -c -o kvQc2Test-FlagTester.obj `if test -f 'algorithms/FlagTester.cc'; then $(CYGPATH_W) 'algorithms/FlagTester.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/FlagTester.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-FlagTester.Tpo $(DEPDIR)/kvQc2Test-FlagTester.Po
#	source='algorithms/FlagTester.cc' object='kvQc2Test-FlagTester.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-FlagTester.obj `if test -f 'algorithms/FlagTester.cc'; then $(CYGPATH_W) 'algorithms/FlagTester.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/FlagTester.cc'; fi`

kvQc2Test-proj++.o: algorithms/proj++.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-proj++.o -MD -MP -MF $(DEPDIR)/kvQc2Test-proj++.Tpo -c -o kvQc2Test-proj++.o `test -f 'algorithms/proj++.cc' || echo '$(srcdir)/'`algorithms/proj++.cc
	mv -f $(DEPDIR)/kvQc2Test-proj++.Tpo $(DEPDIR)/kvQc2Test-proj++.Po
#	source='algorithms/proj++.cc' object='kvQc2Test-proj++.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-proj++.o `test -f 'algorithms/proj++.cc' || echo '$(srcdir)/'`algorithms/proj++.cc

kvQc2Test-proj++.obj: algorithms/proj++.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-proj++.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-proj++.Tpo -c -o kvQc2Test-proj++.obj `if test -f 'algorithms/proj++.cc'; then $(CYGPATH_W) 'algorithms/proj++.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/proj++.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-proj++.Tpo $(DEPDIR)/kvQc2Test-proj++.Po
#	source='algorithms/proj++.cc' object='kvQc2Test-proj++.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-proj++.obj `if test -f 'algorithms/proj++.cc'; then $(CYGPATH_W) 'algorithms/proj++.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/proj++.cc'; fi`

kvQc2Test-Qc2D.o: algorithms/Qc2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2D.o -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2D.Tpo -c -o kvQc2Test-Qc2D.o `test -f 'algorithms/Qc2D.cc' || echo '$(srcdir)/'`algorithms/Qc2D.cc
	mv -f $(DEPDIR)/kvQc2Test-Qc2D.Tpo $(DEPDIR)/kvQc2Test-Qc2D.Po
#	source='algorithms/Qc2D.cc' object='kvQc2Test-Qc2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2D.o `test -f 'algorithms/Qc2D.cc' || echo '$(srcdir)/'`algorithms/Qc2D.cc

kvQc2Test-Qc2D.obj: algorithms/Qc2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-Qc2D.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-Qc2D.Tpo -c -o kvQc2Test-Qc2D.obj `if test -f 'algorithms/Qc2D.cc'; then $(CYGPATH_W) 'algorithms/Qc2D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Qc2D.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-Qc2D.Tpo $(DEPDIR)/kvQc2Test-Qc2D.Po
#	source='algorithms/Qc2D.cc' object='kvQc2Test-Qc2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-Qc2D.obj `if test -f 'algorithms/Qc2D.cc'; then $(CYGPATH_W) 'algorithms/Qc2D.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/Qc2D.cc'; fi`

kvQc2Test-StationSelection.o: algorithms/StationSelection.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-StationSelection.o -MD -MP -MF $(DEPDIR)/kvQc2Test-StationSelection.Tpo -c -o kvQc2Test-StationSelection.o `test -f 'algorithms/StationSelection.cc' || echo '$(srcdir)/'`algorithms/StationSelection.cc
	mv -f $(DEPDIR)/kvQc2Test-StationSelection.Tpo $(DEPDIR)/kvQc2Test-StationSelection.Po
#	source='algorithms/StationSelection.cc' object='kvQc2Test-StationSelection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-StationSelection.o `test -f 'algorithms/StationSelection.cc' || echo '$(srcdir)/'`algorithms/StationSelection.cc

kvQc2Test-StationSelection.obj: algorithms/StationSelection.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-StationSelection.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-StationSelection.Tpo -c -o kvQc2Test-StationSelection.obj `if test -f 'algorithms/StationSelection.cc'; then $(CYGPATH_W) 'algorithms/StationSelection.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/StationSelection.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-StationSelection.Tpo $(DEPDIR)/kvQc2Test-StationSelection.Po
#	source='algorithms/StationSelection.cc' object='kvQc2Test-StationSelection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-StationSelection.obj `if test -f 'algorithms/StationSelection.cc'; then $(CYGPATH_W) 'algorithms/StationSelection.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/StationSelection.cc'; fi`

kvQc2Test-table_delaunay.o: algorithms/table_delaunay.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-table_delaunay.o -MD -MP -MF $(DEPDIR)/kvQc2Test-table_delaunay.Tpo -c -o kvQc2Test-table_delaunay.o `test -f 'algorithms/table_delaunay.cc' || echo '$(srcdir)/'`algorithms/table_delaunay.cc
	mv -f $(DEPDIR)/kvQc2Test-table_delaunay.Tpo $(DEPDIR)/kvQc2Test-table_delaunay.Po
#	source='algorithms/table_delaunay.cc' object='kvQc2Test-table_delaunay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-table_delaunay.o `test -f 'algorithms/table_delaunay.cc' || echo '$(srcdir)/'`algorithms/table_delaunay.cc

kvQc2Test-table_delaunay.obj: algorithms/table_delaunay.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQc2Test-table_delaunay.obj -MD -MP -MF $(DEPDIR)/kvQc2Test-table_delaunay.Tpo -c -o kvQc2Test-table_delaunay.obj `if test -f 'algorithms/table_delaunay.cc'; then $(CYGPATH_W) 'algorithms/table_delaunay.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/table_delaunay.cc'; fi`
	mv -f $(DEPDIR)/kvQc2Test-table_delaunay.Tpo $(DEPDIR)/kvQc2Test-table_delaunay.Po
#	source='algorithms/table_delaunay.cc' object='kvQc2Test-table_delaunay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQc2Test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQc2Test-table_delaunay.obj `if test -f 'algorithms/table_delaunay.cc'; then $(CYGPATH_W) 'algorithms/table_delaunay.cc'; else $(CYGPATH_W) '$(srcdir)/algorithms/table_delaunay.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS

	-ldl 

clean-local:
	rm -rf test/var
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
